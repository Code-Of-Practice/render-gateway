{"version":3,"sources":["../../src/shared/shutdown.js"],"names":["shutdown","server","logger","info","close","err","error","message","process","exit"],"mappings":";;;;;;;AAGA;;;AAGO,MAAMA,QAAQ,GAAG,CAACC,MAAD,EAAsBC,MAAtB,KAAyC;AAC7DA,EAAAA,MAAM,CAACC,IAAP,CAAY,kCAAZ;;AAEA,MAAI;AACAF,IAAAA,MAAM,CAACG,KAAP,CAAcC,GAAD,IAAS;AAClB,UAAIA,GAAJ,EAAS;AACLH,QAAAA,MAAM,CAACI,KAAP,CACK,+BACID,GAAG,IAAIA,GAAG,CAACE,OAAZ,IAAwB,eAC3B,EAHL;AAKAC,QAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACH,OAPD,MAOO;AACHD,QAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACH;AACJ,KAXD;AAYH,GAbD,CAaE,OAAOJ,GAAP,EAAY;AACVH,IAAAA,MAAM,CAACI,KAAP,CACK,yBAAyBD,GAAG,IAAIA,GAAG,CAACE,OAAZ,IAAwB,eAAgB,EADrE;AAGAC,IAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACH;AACJ,CAtBM","sourcesContent":["// @flow\nimport type {Logger} from \"./types.js\";\n\n/**\n * Utility method for gracefully shutting down the server.\n */\nexport const shutdown = (server: http$Server, logger: Logger) => {\n    logger.info(\"Gracefully shutting down server.\");\n\n    try {\n        server.close((err) => {\n            if (err) {\n                logger.error(\n                    `Error shutting down server: ${\n                        (err && err.message) || \"Unknown Error\"\n                    }`,\n                );\n                process.exit(1);\n            } else {\n                process.exit(0);\n            }\n        });\n    } catch (err) {\n        logger.error(\n            `Error closing server: ${(err && err.message) || \"Unknown Error\"}`,\n        );\n        process.exit(1);\n    }\n};\n"],"file":"shutdown.js"}